{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/Transactions/Transactions.module.css","components/Section/Section.js","components/Profile/ProfileStats.js","components/Profile/Profile.js","helpers/generators/onRandomColorGenerator.js","components/Statistics/StatisticItem.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/Transactions/TransactionItem.js","components/Transactions/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","classNames","children","className","ProfileItem","followers","views","likes","styles","stats","label","quantity","defaultProps","Profile","user","username","tag","location","avatar","profile","description","src","alt","name","ProfileStats","onRandomColorGenerator","min","max","Math","floor","random","StatisticItem","item","colors","style","backgroundColor","length","percentage","id","Statistics","title","statistics","statsList","map","FriendListItem","isOnline","statusOnline","statusOffline","width","FriendList","friendsData","friendList","TransactionItem","type","amount","currency","TransactionHistory","transactionData","transactionHistory","App","userData","statisticData","colorsData","friendListData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d35463e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3xRxm\",\"description\":\"Profile_description__1HlXp\",\"name\":\"Profile_name__P3FQs\",\"tag\":\"Profile_tag__ZmUiE\",\"location\":\"Profile_location__20eqY\",\"avatar\":\"Profile_avatar__MRYm8\",\"userInfo\":\"Profile_userInfo__VHQWf\",\"stats\":\"Profile_stats__3CFs7\",\"label\":\"Profile_label__2HymP\",\"quantity\":\"Profile_quantity__9IDIS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__38cYD\",\"title\":\"Statistics_title__2sP9Q\",\"statsList\":\"Statistics_statsList__14BHV\",\"label\":\"Statistics_label__1w2M2\",\"percentage\":\"Statistics_percentage__1F3XO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__2nuLr\",\"item\":\"FriendList_item__1FFuP\",\"name\":\"FriendList_name__1gEhO\",\"avatar\":\"FriendList_avatar__1Mg1i\",\"statusOnline\":\"FriendList_statusOnline__2ZmPn\",\"statusOffline\":\"FriendList_statusOffline__ANY80\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"Transactions_transactionHistory__3uguX\"};","import PropTypes from 'prop-types';\n\nconst Section = ({ classNames = '', children }) => {\n  return <section className={classNames}>{children}</section>;\n};\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from 'react';\nimport styles from './Profile.module.css';\nimport PropTypes from 'prop-types';\n\nconst ProfileItem = ({ followers, views, likes }) => {\n  return (\n    <ul className={styles.stats}>\n      <li>\n        <span className={styles.label}>Followers</span>\n        <span className={styles.quantity}>{followers}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Views</span>\n        <span className={styles.quantity}>{views}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Likes</span>\n        <span className={styles.quantity}>{likes}</span>\n      </li>\n    </ul>\n  );\n};\n\nProfileItem.defaultProps = {\n  followers: '0',\n  views: '0',\n  likes: '0',\n};\n\nProfileItem.propTypes = {\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default ProfileItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\nimport ProfileStats from './ProfileStats';\n\nconst Profile = ({ user }) => {\n  const { username, tag, location, avatar, stats } = user;\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img src={avatar} alt={username} className={styles.avatar} />\n        <p className={styles.name}>{username}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ProfileStats {...stats} />\n    </div>\n  );\n};\n\nProfile.defaultProps = {\n  username: 'unknown user',\n  tag: 'no tag',\n  location: 'no location',\n  avatar: 'https://cdn-icons-png.flaticon.com/512/2922/2922506.png',\n};\n\nProfile.propTypes = {\n  user: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.shape().isRequired,\n  }).isRequired,\n};\n\nexport default Profile;\n","const onRandomColorGenerator = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport default onRandomColorGenerator;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\nimport onRandomColorGenerator from '../../helpers/generators/onRandomColorGenerator';\n\nconst StatisticItem = ({ item, colors }) => {\n  return (\n    <li\n      key={item.id}\n      className={styles.item}\n      style={{\n        backgroundColor: colors[onRandomColorGenerator(0, colors.length - 1)],\n      }}\n    >\n      <span className={styles.label}>{item.label}</span>\n      <span className={styles.percentage}>{item.percentage}%</span>\n    </li>\n  );\n};\n\nStatisticItem.defaultProps = {\n  label: 'label',\n  percentage: 0,\n};\n\nStatisticItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired,\n  }),\n};\nexport default StatisticItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\nimport StatisticItem from './StatisticItem';\n\nconst Statistics = ({ title, stats, colors }) => {\n  return (\n    <section className={styles.statistics}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n\n      <ul className={styles.statsList}>\n        {stats.map(item => StatisticItem({ item, colors }))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.defaultProps = {\n  title: 'title',\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(PropTypes.shape({}).isRequired).isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FriendList.module.css';\n\nconst FriendListItem = ({ id, avatar, name, isOnline }) => {\n  return (\n    <li className={styles.item} key={id}>\n      <span\n        className={isOnline ? styles.statusOnline : styles.statusOffline}\n      ></span>\n      <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={styles.name}>{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.defaultProps = {\n  avatar: 'https://cdn-icons-png.flaticon.com/512/2922/2922506.png',\n  name: 'unknown user',\n  isOnline: false,\n};\n\nFriendListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport styles from './FriendList.module.css';\n\nconst FriendList = ({ friendsData }) => {\n  return (\n    friendsData.length > 0 && (\n      <ul className={styles.friendList}>{friendsData.map(FriendListItem)}</ul>\n    )\n  );\n};\n\nFriendList.propTypes = {\n  friendsData: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TransactionItem = ({ id, type, amount, currency }) => {\n  return (\n    <tr key={id}>\n      <td>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </tr>\n  );\n};\n\nTransactionItem.defaultProps = {\n  type: 'unknown',\n  amount: '0.0',\n  currency: 'NONE',\n};\n\nTransactionItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n\nexport default TransactionItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TransactionItem from './TransactionItem';\nimport styles from './Transactions.module.css';\n\nconst TransactionHistory = ({ transactionData }) => {\n  return (\n    <table className={styles.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>{transactionData.map(TransactionItem)}</tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  transactionData: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n};\n\nexport default TransactionHistory;\n","import './App.css';\nimport Section from './components/Section/Section';\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/Transactions/TransactionHistory';\nimport userData from './data/user.json';\nimport statisticData from './data/statistics.json';\nimport friendListData from './data/friends.json';\nimport transactionData from './data/transactions.json';\nimport colorsData from './data/colors.json';\n\nfunction App() {\n  return (\n    <Section classNames=\"userCard\">\n      <Profile user={userData} />\n      <Statistics\n        title=\"Upload stats\"\n        stats={statisticData}\n        colors={colorsData}\n      />\n      <FriendList friendsData={friendListData} />\n      <TransactionHistory transactionData={transactionData} />\n    </Section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}